apply plugin: 'com.android.application'
// Apollo
// This must go AFTER com.android.application plugin and BEFORE Kotlin plugin
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.28.1'
    }
}


android {
    compileSdkVersion versions.compileSdk
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        preprod {
            try {
                keyAlias "plankhana"
                keyPassword DEBUG_KEYSTORE_PASSWORD
                storePassword DEBUG_KEYSTORE_PASSWORD
                storeFile file("../debug_key")
            } catch (ex) {
                throw new InvalidUserDataException("You should define DEBUG_KEYSTORE_PASSWORD in gradle.properties.")
            }
        }
        release {
            try {
                keyAlias "plankhana"
                keyPassword RELEASE_KEYSTORE_PASSWORD
                storePassword RELEASE_KEYSTORE_PASSWORD
                storeFile file("../release")
            } catch (ex) {
                throw new InvalidUserDataException("You should define DEBUG_KEYSTORE_PASSWORD in gradle.properties.")
            }

        }
    }

    buildTypes {
        preprod {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".preprod"
            signingConfig signingConfigs.debug
            resValue "string", "app_name", "Preprod " + APP_NAME_EN
            buildConfigField("String", "BASE_URL", "\"" + PREPROD_DOMAIN + "\"")
            buildConfigField("boolean", "IS_FABRIC_REQUIRED", "false")
            buildConfigField("String", "GRAPHQL_WEBSOCKET_ENDPOINT", "\"" + PREPROD_GRAPHQL_WEBSOCKET_ENDPOINT + "\"")
            buildConfigField("String", "HASURA_ADMIN_SECRET", "\"" + HASURA_ADMIN_SECRET + "\"")

            ext.enableCrashlytics = false
        }
        releasedebug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.release
            resValue "string", "app_name", APP_NAME_EN
            buildConfigField("String", "BASE_URL", "\"" + PROD_DOMAIN + "\"")
            buildConfigField("boolean", "IS_FABRIC_REQUIRED", "true")
            buildConfigField("String", "GRAPHQL_WEBSOCKET_ENDPOINT", "\"" + PROD_GRAPHQL_WEBSOCKET_ENDPOINT + "\"")
            buildConfigField("String", "HASURA_ADMIN_SECRET", "\"" + HASURA_ADMIN_SECRET + "\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            initWith releasedebug
            minifyEnabled true
            shrinkResources = true
            debuggable false
        }
    }
    androidExtensions {
        experimental = true
    }
}

repositories {
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.core:core-ktx:1.2.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation "com.google.firebase:firebase-storage:$versions.firebaseStorage"
    implementation "com.google.firebase:firebase-auth:$versions.firebaseAuth"
    implementation 'com.google.firebase:firebase-core:17.2.0'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'

    implementation 'com.google.android.material:material:1.1.0-alpha09'
    implementation "androidx.vectordrawable:vectordrawable:1.1.0-rc01"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.android.play:core:1.6.1'

    implementation 'androidx.room:room-runtime:2.2.0-alpha01'
    kapt 'androidx.room:room-compiler:2.2.0-alpha01'
    implementation 'androidx.room:room-rxjava2:2.2.0-alpha01'

    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0-alpha02'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-alpha02'

    //Rx
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

    //OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okHttp3"

    //Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    //Svg support
    implementation "com.caverock:androidsvg:1.4"
    implementation "com.google.firebase:firebase-config:$versions.firebaseRemoteConfig"

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'

    implementation "com.karumi:dexter:$versions.dexter"

    // Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apolloVersion"
    implementation "com.apollographql.apollo:apollo-android-support:$apolloVersion"
    implementation "com.apollographql.apollo:apollo-rx2-support:$apolloVersion"
    compileOnly 'org.jetbrains:annotations:13.0'
    testCompileOnly 'org.jetbrains:annotations:13.0'

    // IMPORTANT: Without this project will not build
    // (because @Generated annotation in generated classes is unknown)
    implementation 'javax.annotation:jsr250-api:1.0'

    //Google play services
    implementation "com.google.android.gms:play-services-auth:$versions.googlePlayService"

    //Firebase push notification
    implementation "com.google.firebase:firebase-messaging:$versions.firebaseMessaging"

    //Firebase crashlytics
    implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
}
